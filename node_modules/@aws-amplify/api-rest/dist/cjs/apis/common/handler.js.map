{"version":3,"file":"handler.js","sources":["../../../../src/apis/common/handler.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferHandler = void 0;\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_1 = require(\"../../utils\");\nconst normalizeHeaders_1 = require(\"../../utils/normalizeHeaders\");\n/**\n * Make REST API call with best-effort IAM auth.\n * @param amplify Amplify instance to to resolve credentials and tokens. Should use different instance in client-side\n *   and SSR\n * @param options Options accepted from public API options when calling the handlers.\n * @param signingServiceInfo Internal-only options enable IAM auth as well as to to overwrite the IAM signing service\n *   and region. If specified, and NONE of API Key header or Auth header is present, IAM auth will be used.\n *\n * @internal\n */\nconst transferHandler = async (amplify, options, signingServiceInfo) => {\n    const { url, method, headers, body, withCredentials, abortSignal } = options;\n    const resolvedBody = body\n        ? body instanceof FormData\n            ? body\n            : JSON.stringify(body ?? '')\n        : undefined;\n    const resolvedHeaders = {\n        ...(0, normalizeHeaders_1.normalizeHeaders)(headers),\n        ...(resolvedBody\n            ? {\n                'content-type': body instanceof FormData\n                    ? 'multipart/form-data'\n                    : 'application/json; charset=UTF-8',\n            }\n            : {}),\n    };\n    const request = {\n        url,\n        headers: resolvedHeaders,\n        method,\n        body: resolvedBody,\n    };\n    const baseOptions = {\n        retryDecider: (0, aws_client_utils_1.getRetryDecider)(utils_1.parseRestApiServiceError),\n        computeDelay: aws_client_utils_1.jitteredBackoff,\n        withCrossDomainCredentials: withCredentials,\n        abortSignal,\n    };\n    const isIamAuthApplicable = iamAuthApplicable(request, signingServiceInfo);\n    let response;\n    if (isIamAuthApplicable) {\n        const signingInfoFromUrl = (0, utils_1.parseSigningInfo)(url);\n        const signingService = signingServiceInfo?.service ?? signingInfoFromUrl.service;\n        const signingRegion = signingServiceInfo?.region ?? signingInfoFromUrl.region;\n        const credentials = await (0, utils_1.resolveCredentials)(amplify);\n        response = await (0, aws_client_utils_1.authenticatedHandler)(request, {\n            ...baseOptions,\n            credentials,\n            region: signingRegion,\n            service: signingService,\n        });\n    }\n    else {\n        response = await (0, aws_client_utils_1.unauthenticatedHandler)(request, {\n            ...baseOptions,\n        });\n    }\n    // Clean-up un-modeled properties from response.\n    return {\n        statusCode: response.statusCode,\n        headers: response.headers,\n        body: response.body,\n    };\n};\nexports.transferHandler = transferHandler;\nconst iamAuthApplicable = ({ headers }, signingServiceInfo) => !headers.authorization && !headers['x-api-key'] && !!signingServiceInfo;\n"],"names":[],"mappings":";;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;AACjC,MAAM,kBAAkB,GAAG,OAAO,CAAC,8CAA8C,CAAC,CAAC;AACnF,MAAM,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,MAAM,kBAAkB,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,GAAG,OAAO,OAAO,EAAE,OAAO,EAAE,kBAAkB,KAAK;AACxE,IAAI,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;AACjF,IAAI,MAAM,YAAY,GAAG,IAAI;AAC7B,UAAU,IAAI,YAAY,QAAQ;AAClC,cAAc,IAAI;AAClB,cAAc,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;AACxC,UAAU,SAAS,CAAC;AACpB,IAAI,MAAM,eAAe,GAAG;AAC5B,QAAQ,GAAG,IAAI,kBAAkB,CAAC,gBAAgB,EAAE,OAAO,CAAC;AAC5D,QAAQ,IAAI,YAAY;AACxB,cAAc;AACd,gBAAgB,cAAc,EAAE,IAAI,YAAY,QAAQ;AACxD,sBAAsB,qBAAqB;AAC3C,sBAAsB,iCAAiC;AACvD,aAAa;AACb,cAAc,EAAE,CAAC;AACjB,KAAK,CAAC;AACN,IAAI,MAAM,OAAO,GAAG;AACpB,QAAQ,GAAG;AACX,QAAQ,OAAO,EAAE,eAAe;AAChC,QAAQ,MAAM;AACd,QAAQ,IAAI,EAAE,YAAY;AAC1B,KAAK,CAAC;AACN,IAAI,MAAM,WAAW,GAAG;AACxB,QAAQ,YAAY,EAAE,IAAI,kBAAkB,CAAC,eAAe,EAAE,OAAO,CAAC,wBAAwB,CAAC;AAC/F,QAAQ,YAAY,EAAE,kBAAkB,CAAC,eAAe;AACxD,QAAQ,0BAA0B,EAAE,eAAe;AACnD,QAAQ,WAAW;AACnB,KAAK,CAAC;AACN,IAAI,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;AAC/E,IAAI,IAAI,QAAQ,CAAC;AACjB,IAAI,IAAI,mBAAmB,EAAE;AAC7B,QAAQ,MAAM,kBAAkB,GAAG,IAAI,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;AACtE,QAAQ,MAAM,cAAc,GAAG,kBAAkB,EAAE,OAAO,IAAI,kBAAkB,CAAC,OAAO,CAAC;AACzF,QAAQ,MAAM,aAAa,GAAG,kBAAkB,EAAE,MAAM,IAAI,kBAAkB,CAAC,MAAM,CAAC;AACtF,QAAQ,MAAM,WAAW,GAAG,MAAM,IAAI,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;AAC3E,QAAQ,QAAQ,GAAG,MAAM,IAAI,kBAAkB,CAAC,oBAAoB,EAAE,OAAO,EAAE;AAC/E,YAAY,GAAG,WAAW;AAC1B,YAAY,WAAW;AACvB,YAAY,MAAM,EAAE,aAAa;AACjC,YAAY,OAAO,EAAE,cAAc;AACnC,SAAS,CAAC,CAAC;AACX,KAAK;AACL,SAAS;AACT,QAAQ,QAAQ,GAAG,MAAM,IAAI,kBAAkB,CAAC,sBAAsB,EAAE,OAAO,EAAE;AACjF,YAAY,GAAG,WAAW;AAC1B,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,OAAO;AACX,QAAQ,UAAU,EAAE,QAAQ,CAAC,UAAU;AACvC,QAAQ,OAAO,EAAE,QAAQ,CAAC,OAAO;AACjC,QAAQ,IAAI,EAAE,QAAQ,CAAC,IAAI;AAC3B,KAAK,CAAC;AACN,CAAC,CAAC;AACF,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,MAAM,iBAAiB,GAAG,CAAC,EAAE,OAAO,EAAE,EAAE,kBAAkB,KAAK,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,kBAAkB;;"}