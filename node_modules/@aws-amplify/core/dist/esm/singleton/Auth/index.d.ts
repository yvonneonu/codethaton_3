import { AuthConfig, AuthSession, AuthTokens, FetchAuthSessionOptions, LibraryAuthOptions } from './types';
export declare function isTokenExpired({ expiresAt, clockDrift, }: {
    expiresAt: number;
    clockDrift: number;
}): boolean;
export declare class AuthClass {
    private authConfig?;
    private authOptions?;
    constructor();
    /**
     * Configure Auth category
     *
     * @internal
     *
     * @param authResourcesConfig - Resources configurations required by Auth providers.
     * @param authOptions - Client options used by library
     *
     * @returns void
     */
    configure(authResourcesConfig: AuthConfig, authOptions?: LibraryAuthOptions): void;
    fetchAuthSession(options?: FetchAuthSessionOptions): Promise<AuthSession>;
    clearCredentials(): Promise<void>;
    getTokens(options: FetchAuthSessionOptions): Promise<AuthTokens | undefined>;
}
