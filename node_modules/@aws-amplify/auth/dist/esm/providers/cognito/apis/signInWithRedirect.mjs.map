{"version":3,"file":"signInWithRedirect.mjs","sources":["../../../../../src/providers/cognito/apis/signInWithRedirect.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, Hub, defaultStorage } from '@aws-amplify/core';\nimport { AuthAction, AMPLIFY_SYMBOL, assertOAuthConfig, assertTokenProviderConfig, isBrowser, urlSafeEncode, USER_AGENT_HEADER, urlSafeDecode, decodeJWT, AmplifyUrl, } from '@aws-amplify/core/internals/utils';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { cognitoUserPoolsTokenProvider } from '../tokenProvider';\nimport { cognitoHostedUIIdentityProviderMap } from '../types/models';\nimport { DefaultOAuthStore } from '../utils/signInWithRedirectStore';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AuthErrorTypes } from '../../../types/Auth';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { authErrorMessages } from '../../../Errors';\nimport { getAuthUserAgentValue, openAuthSession } from '../../../utils';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers';\nimport { generateCodeVerifier, generateState } from '../utils/oauth';\nimport { getCurrentUser } from './getCurrentUser';\nimport { getRedirectUrl } from '../utils/oauth/getRedirectUrl';\n/**\n * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n *\n * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n *\n * @throws AuthTokenConfigException - Thrown when the userpool config is invalid.\n * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n */\nexport async function signInWithRedirect(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    store.setAuthConfig(authConfig);\n    await assertUserNotAuthenticated();\n    let provider = 'COGNITO'; // Default\n    if (typeof input?.provider === 'string') {\n        provider = cognitoHostedUIIdentityProviderMap[input.provider];\n    }\n    else if (input?.provider?.custom) {\n        provider = input.provider.custom;\n    }\n    return oauthSignIn({\n        oauthConfig: authConfig.loginWith.oauth,\n        clientId: authConfig.userPoolClientId,\n        provider,\n        customState: input?.customState,\n        preferPrivateSession: input?.options?.preferPrivateSession,\n    });\n}\nexport const store = new DefaultOAuthStore(defaultStorage);\nexport async function oauthSignIn({ oauthConfig, provider, clientId, customState, preferPrivateSession, }) {\n    const { domain, redirectSignIn, responseType, scopes } = oauthConfig;\n    const randomState = generateState();\n    /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n    single-encodes/decodes url on first sign in and double-encodes/decodes url\n    when user already signed in. Using encodeURIComponent, Base32, Base64 add\n    characters % or = which on further encoding becomes unsafe. '=' create issue\n    for parsing query params.\n    Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n    const state = customState\n        ? `${randomState}-${urlSafeEncode(customState)}`\n        : randomState;\n    const { value, method, toCodeChallenge } = generateCodeVerifier(128);\n    store.storeOAuthInFlight(true);\n    store.storeOAuthState(state);\n    store.storePKCE(value);\n    const queryString = Object.entries({\n        redirect_uri: getRedirectUrl(oauthConfig.redirectSignIn),\n        response_type: responseType,\n        client_id: clientId,\n        identity_provider: provider,\n        scope: scopes.join(' '),\n        state,\n        ...(responseType === 'code' && {\n            code_challenge: toCodeChallenge(),\n            code_challenge_method: method,\n        }),\n    })\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    // TODO(v6): use URL object instead\n    const oAuthUrl = `https://${domain}/oauth2/authorize?${queryString}`;\n    const { type, error, url } = (await openAuthSession(oAuthUrl, redirectSignIn, preferPrivateSession)) ??\n        {};\n    // This code will run in RN applications only as calling signInWithRedirect will\n    // resolve the promise.\n    if (type === 'success' && url) {\n        // ensure the code exchange completion resolves the signInWithRedirect\n        // returned promise in react-native\n        await handleAuthResponse({\n            currentUrl: url,\n            clientId,\n            domain,\n            redirectUri: redirectSignIn[0],\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n            preferPrivateSession,\n        });\n    }\n    // This code will run in RN applications only as calling signInWithRedirect will\n    // resolve the promise.\n    if (type === 'error') {\n        await handleFailure(String(error));\n    }\n}\nasync function handleCodeFlow({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    let validatedState;\n    try {\n        validatedState = await validateState(getStateFromURL(url));\n    }\n    catch (err) {\n        invokeAndClearPromise();\n        // validateState method will always throw an AuthError when the state is not valid. The if statement is making TS happy.\n        if (err instanceof AuthError) {\n            await handleFailure(err.message);\n        }\n        return;\n    }\n    const code = url.searchParams.get('code');\n    if (!code) {\n        await store.clearOAuthData();\n        invokeAndClearPromise();\n        return;\n    }\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await store.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token, id_token, error, error_message, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        invokeAndClearPromise();\n        await handleFailure(error_message ?? error);\n    }\n    await store.clearOAuthInflightData();\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refresh_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n}\nasync function handleImplicitFlow({ currentUrl, redirectUri, preferPrivateSession, }) {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        invokeAndClearPromise();\n        await handleFailure(error_description ?? error);\n    }\n    if (!access_token) {\n        await store.clearOAuthData();\n        invokeAndClearPromise();\n        return;\n    }\n    let validatedState;\n    try {\n        validatedState = await validateState(state);\n    }\n    catch (error) {\n        invokeAndClearPromise();\n        // validateState method will always throw an AuthError when the state is not valid. The if statement is making TS happy.\n        if (error instanceof AuthError) {\n            await handleFailure(error.message);\n        }\n        return;\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n}\nasync function completeFlow({ redirectUri, state, preferPrivateSession, }) {\n    await store.clearOAuthData();\n    await store.storeOAuthSignIn(true, preferPrivateSession);\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    Hub.dispatch('auth', { event: 'signedIn', data: await getCurrentUser() }, 'Auth', AMPLIFY_SYMBOL);\n    clearHistory(redirectUri);\n    invokeAndClearPromise();\n}\nasync function handleAuthResponse({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) {\n    try {\n        const urlParams = new AmplifyUrl(currentUrl);\n        const error = urlParams.searchParams.get('error');\n        const errorMessage = urlParams.searchParams.get('error_description');\n        if (error) {\n            await handleFailure(errorMessage);\n        }\n        if (responseType === 'code') {\n            return await handleCodeFlow({\n                currentUrl,\n                userAgentValue,\n                clientId,\n                redirectUri,\n                domain,\n                preferPrivateSession,\n            });\n        }\n        else {\n            return await handleImplicitFlow({\n                currentUrl,\n                redirectUri,\n                preferPrivateSession,\n            });\n        }\n    }\n    catch (e) {\n        throw e;\n    }\n}\nfunction getStateFromURL(urlParams) {\n    return urlParams.searchParams.get('state');\n}\nasync function validateState(state) {\n    const savedState = await store.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: 'An error occurred while validating the state',\n            recoverySuggestion: 'Try to initiate an OAuth flow from Amplify',\n        });\n    }\n    return validatedState;\n}\nasync function handleFailure(errorMessage) {\n    const error = new AuthError({\n        message: errorMessage ?? 'An error has occurred during the oauth proccess',\n        name: AuthErrorCodes.OAuthSignInError,\n        recoverySuggestion: authErrorMessages.oauthSignInError.log,\n    });\n    await store.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n    throw new AuthError({\n        message: errorMessage ?? '',\n        name: AuthErrorCodes.OAuthSignInError,\n        recoverySuggestion: authErrorMessages.oauthSignInError.log,\n    });\n}\nexport async function parseRedirectURL() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    try {\n        assertTokenProviderConfig(authConfig);\n        store.setAuthConfig(authConfig);\n    }\n    catch (_err) {\n        // Token provider not configure nothing to do\n        return;\n    }\n    // No OAuth inflight doesnt need to parse the url\n    if (!(await store.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        assertOAuthConfig(authConfig);\n    }\n    catch (err) {\n        // TODO(v6): this should warn you have signInWithRedirect but is not configured\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        await handleAuthResponse({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri: redirectSignIn[0],\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        // is ok if there is not OAuthConfig\n    }\n}\nfunction urlListener() {\n    // Listen configure to parse url\n    parseRedirectURL();\n    Hub.listen('core', capsule => {\n        if (capsule.payload.event === 'configure') {\n            parseRedirectURL();\n        }\n    });\n}\nisBrowser() && urlListener();\n// This has a reference for listeners that requires to be notified, TokenOrchestrator use this for load tokens\nlet inflightPromiseResolvers = [];\nconst invokeAndClearPromise = () => {\n    for (const promiseResolver of inflightPromiseResolvers) {\n        promiseResolver();\n    }\n    inflightPromiseResolvers = [];\n};\nisBrowser() &&\n    cognitoUserPoolsTokenProvider.setWaitForInflightOAuth(() => new Promise(async (res, _rej) => {\n        if (!(await store.loadOAuthInFlight())) {\n            res();\n        }\n        else {\n            inflightPromiseResolvers.push(res);\n        }\n        return;\n    }));\nfunction clearHistory(redirectUri) {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState({}, '', redirectUri);\n    }\n}\nfunction isCustomState(state) {\n    return /-/.test(state);\n}\nfunction getCustomState(state) {\n    return state.split('-').splice(1).join('-');\n}\n"],"names":[],"mappings":"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"}